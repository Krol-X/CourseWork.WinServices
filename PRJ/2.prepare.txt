// 23.03.19 _KROL
// Copyright [C] 2019 Alex Krol krolmail@list.ru
// Анализ и подготовка к разработке

  Для данного проекта я решил использовать интеративный подход к разработке ПО.
>   Проект при этом подходе в каждой фазе развития проходит повторяющийся цикл
>   PDCA: Планирование - Реализация - Проверка - Оценка. (из Wikipedia)

  Однако, существует ещё каскадная и спиральная модели проектирования.
>   Этапы проекта в соответствии с каскадной моделью:
>   - Формирование требований;
>   - Проектирование;
>   - Реализация;
>   - Тестирование;
>   - Внедрение;
>   - Эксплуатация и сопровождение. (из Wikipedia)

>   (Спиральная модель)
>   На каждой итерации оцениваются:
>   - риск превышения сроков и стоимости проекта;
>   - необходимость выполнения ещё одной итерации;
>   - степень полноты и точности понимания требований к системе;
>   - целесообразность прекращения проекта. (из Wikipedia)

  До первой процентовки (40%) осталось 18 дней, которые можно разбить на
основные этапы:
  1.  24-29 марта - подготовка, написание тестовых программ для изучения
    отдельных частей приложения
  2.  30 марта-4 апреля - разработка программы
  3.  5-9 апреля - написание записки

  Кроме этого, следует расписать этапы разработки:
  1.  Исследование интерфейса работ со службами (Windows/Linux)
  2.  Исследование пользовательского интерфейса Qt
  3.  Написание программы для управления службами с помощью Qt
  4.  Исследование UDP и сокетов
  5.  Написание маленького чата посредством консоли (возможно)
  6.  Разработка протокола для сервера
  7.  Создание сервера (консольный интерфейс)
  8.  Создание клиента (qt-интерфейс)
  9.  Анализ конечного исходного кода, поиск ошибок
  Написание записки может начаться раньше и идти параллельно планам.

  Дерево каталогов проекта:
  .
  +---DEV      - файлы, используемые во время разработки
  +---DOC      - документация и записка
  +---PRJ      - документация к разработке проекта
  +---SRC      - исходный код

  ПО используемое для разработки:
  Система контроля версий: GIT
  Среда разработки: Pelles C или DEV-CPP и/или Visual Studio
  Язык: C или C++ (пока не решил)
  Дополнительное ПО(возможно): Enterprise Architect, FreeMind
